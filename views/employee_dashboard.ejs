<!DOCTYPE html>
<html>
<head>
  <title>Employee Dashboard</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <nav>
    <img src="/image/logo.png" alt="Logo" class="logo" style="height:40px;vertical-align:left;margin-right:500px;">
    <a href="/logout">Logout</a>
  </nav>

  <div class="dashboard-container">
    <!-- Header -->
    <header class="dashboard-header">
      <h1 class="dashboard-title">Employee Dashboard</h1>
      <div class="user-info">
        <span class="user-role">Employee View</span>
      </div>
    </header>

    <div class="dashboard-layout">
      <!-- Sidebar Navigation -->
      <aside class="dashboard-sidebar">
        <h2 class="sidebar-title">Navigation</h2>
        <ul class="sidebar-nav">
          <li><a href="#" class="sidebar-link active">Dashboard</a></li>
          <li><a href="/expenses" class="sidebar-link">Submit New Expense</a></li>
          <li><a href="#" class="sidebar-link">Reports</a></li>
          <li><a href="#" class="sidebar-link">Settings</a></li>
        </ul>
      </aside>

      <!-- Main Content -->
      <main class="dashboard-main">
        <!-- Stats Overview -->
        <div class="stats-grid" id="stats-grid">
          <div class="stat-card">
            <h3 class="stat-label">Total Submitted</h3>
            <p class="stat-value" id="stat-total">0</p>
          </div>
          <div class="stat-card">
            <h3 class="stat-label">Pending</h3>
            <p class="stat-value" id="stat-pending">0</p>
          </div>
          <div class="stat-card">
            <h3 class="stat-label">Approved</h3>
            <p class="stat-value" id="stat-approved">0</p>
          </div>
          <div class="stat-card">
            <h3 class="stat-label">Rejected</h3>
            <p class="stat-value" id="stat-rejected">0</p>
          </div>
        </div>

        <!-- Recent Expenses Table -->
        <div class="dashboard-table-container">
          <h2 class="table-title">Recent Expenses</h2>
          <div class="table-wrapper">
            <table class="dashboard-table">
              <thead>
                <tr>
                  <th>Date</th>
                  <th>Description</th>
                  <th>Category</th>
                  <th>Amount</th>
                  <th>Status</th>
                </tr>
              </thead>
              <tbody id="expenses-tbody">
                <!-- Expenses will be loaded here -->
              </tbody>
            </table>
          </div>
        </div>

        <!-- Charts Section -->
        <div class="charts-grid">
          <div class="chart-card">
            <h3 class="chart-title">Expense Chart</h3>
            <div class="chart-placeholder">
              <canvas id="expenseChart" class="chart-image"></canvas>
            </div>
          </div>
          <div class="chart-card">
            <h3 class="chart-title">Approval Trend</h3>
            <div class="chart-placeholder">
              <canvas id="approvalChart" class="chart-image"></canvas>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>

  <footer class="dashboard-footer">
    <p>&copy; 2025 Travel Expense Management System</p>
  </footer>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Fetch and update stats
    fetch('/api/employee/stats')
      .then(res => res.json())
      .then(stats => {
        document.getElementById('stat-total').textContent = stats.total;
        document.getElementById('stat-pending').textContent = stats.pending;
        document.getElementById('stat-approved').textContent = stats.approved;
        document.getElementById('stat-rejected').textContent = stats.rejected;
      });
    // Fetch and update recent expenses
    fetch('/api/employee/expenses')
      .then(res => res.json())
      .then(expenses => {
        const tbody = document.getElementById('expenses-tbody');
        tbody.innerHTML = '';
        if (expenses.length === 0) {
          tbody.innerHTML = '<tr><td colspan="5" style="text-align:center; color:#888;">No recent expenses found.</td></tr>';
        } else {
          expenses.forEach(exp => {
            const statusClass = exp.status === 'Approved' ? 'status-approved' : (exp.status === 'Rejected' ? 'status-rejected' : 'status-pending');
            tbody.innerHTML += `
              <tr>
                <td>${exp.date ? new Date(exp.date).toISOString().slice(0,10) : ''}</td>
                <td>${exp.description || ''}</td>
                <td>${exp.category || ''}</td>
                <td>$${exp.amount != null ? exp.amount : ''}</td>
                <td><span class="status-badge ${statusClass}">${exp.status || 'Pending'}</span></td>
              </tr>
            `;
          });
        }
        // --- Chart.js: Expense by Category ---
        const categoryTotals = {};
        const approvalTrend = {};
        expenses.forEach(exp => {
          // Category totals
          if (exp.category) {
            categoryTotals[exp.category] = (categoryTotals[exp.category] || 0) + (exp.amount || 0);
          }
          // Approval trend by date
          if (exp.date && exp.status) {
            const dateStr = new Date(exp.date).toISOString().slice(0, 10);
            if (!approvalTrend[dateStr]) approvalTrend[dateStr] = { Approved: 0, Pending: 0, Rejected: 0 };
            approvalTrend[dateStr][exp.status] += 1;
          }
        });
        // Expense by Category Bar Chart
        const ctx1 = document.getElementById('expenseChart').getContext('2d');
        if (window.expenseChartInstance) window.expenseChartInstance.destroy();
        window.expenseChartInstance = new Chart(ctx1, {
          type: 'bar',
          data: {
            labels: Object.keys(categoryTotals),
            datasets: [{
              label: 'Total Amount',
              data: Object.values(categoryTotals),
              backgroundColor: 'rgba(95,46,234,0.6)'
            }]
          },
          options: {
            responsive: true,
            plugins: { legend: { display: false } },
            scales: { y: { beginAtZero: true } }
          }
        });
        // Approval Trend Line Chart
        const dates = Object.keys(approvalTrend).sort();
        const approvedData = dates.map(d => approvalTrend[d].Approved);
        const pendingData = dates.map(d => approvalTrend[d].Pending);
        const rejectedData = dates.map(d => approvalTrend[d].Rejected);
        const ctx2 = document.getElementById('approvalChart').getContext('2d');
        if (window.approvalChartInstance) window.approvalChartInstance.destroy();
        window.approvalChartInstance = new Chart(ctx2, {
          type: 'line',
          data: {
            labels: dates,
            datasets: [
              { label: 'Approved', data: approvedData, borderColor: '#28a745', backgroundColor: 'rgba(40,167,69,0.1)', fill: true },
              { label: 'Pending', data: pendingData, borderColor: '#ffc107', backgroundColor: 'rgba(255,193,7,0.1)', fill: true },
              { label: 'Rejected', data: rejectedData, borderColor: '#dc3545', backgroundColor: 'rgba(220,53,69,0.1)', fill: true }
            ]
          },
          options: {
            responsive: true,
            plugins: { legend: { display: true } },
            scales: { y: { beginAtZero: true } }
          }
        });
      });
  </script>
</body>
</html>